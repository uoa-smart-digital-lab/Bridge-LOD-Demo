/**********************************************************************************************************************************************************
 * XRUX_Base
 * ---------
 *
 * 2021-09-14
 * 
 * Selects between two GameObjects, turning one on and the other off depending on the function called.  Used as part of the XR UI Base to maximise
 * or minimise the UI.
 * 
 * Roy Davies, Smart Digital Lab, University of Auckland.
 **********************************************************************************************************************************************************/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
// Public functions
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
public interface IXRUX_Base
{
    void Maximise();
    void Minimise();
}
// ----------------------------------------------------------------------------------------------------------------------------------------------------------



// ----------------------------------------------------------------------------------------------------------------------------------------------------------
// Main class
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
[AddComponentMenu("OpenXR UX/Objects/XRUX Base")]
public class XRUX_Base : MonoBehaviour, IXRUX_Base
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Public variables
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    public XRData.Mode mode = XRData.Mode.User; // For use in the inspector only

    public GameObject Maximised; // GameObject to be maximised
    public GameObject Minimised; // GameObject to be minimised
    public bool startMinimised = false; // Whether to start minimised or maximised.

    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Private variables
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Set up the objects ready to go.
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    void Start()
    {
        if (Maximised != null) SetActiveRecursively(Maximised, true);
        if (Minimised != null) SetActiveRecursively(Minimised, true);

        if (startMinimised)
            Minimise();
        else
            Maximise();
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Turn on the Maximise GameObject
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    public void Maximise()
    {
        if (Maximised != null) SetActiveRecursively(Maximised, true);
        if (Minimised != null) SetActiveRecursively(Minimised, false);
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Turn on the Minimise GameObject
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    public void Minimise()
    {
        if (Maximised != null) SetActiveRecursively(Maximised, false);
        if (Minimised != null) SetActiveRecursively(Minimised, true);
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Go through all the children of the given GameObject and call SetActive with the new value.
    // One problem with this is that GameObjects that might be hidden for some other reason will also become visible / active again (or invisible / inactive).
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    private void SetActiveRecursively(GameObject theObject, bool newActive)
    {
        theObject.SetActive(newActive);
        Transform[] allChildren = theObject.GetComponentsInChildren<Transform>(true);
        foreach (Transform child in allChildren)
        {
            child.gameObject.SetActive(newActive);
        }
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
}
